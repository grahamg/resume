name: Graham Greenfield
support_dark_mode: true
fork: true
contact:
  email: ggreenfield@duck.com
  github: grahamg
  linkedin: grahamgre
  gitlab: null
  twitter: null
education:
  - degree: BSc in Computer Science
    time: 2004-2009
    university: University of Missouri-Columbia
skills:
  - category: Language
    skill:
      - Java
      - Python
      - PHP
      - JavaScript
      - Go
      - C
  - category: Backend
    skill:
      - Django
      - Spring
      - Node.js
      - Laravel
  - category: Frontend
    skill:
      - React
      - JSX
  - category: DevOps
    skill:
      - Docker
      - Kubernetes
experience:
  - role: Software Engineer
    time: January 2019-October 2023
    company: Performics, Publicis Groupe
    company_href: https://www.performics.com
    company_location: Chicago, Illinois
    details1: |
      • Led onboarding of new clients to custom Django-based CMS for managing client websites.
    details2: |
      • Member of Benchtools product team. Developed new features, resolved reported defects, performed code reviews
      which over the course of three years led to the modernization of the project to a cloud-based microservice architecture. 
    details3: |
      • Led development for a Django-based service to transform internal client API data and information at their various physical
      locations into Google Maps, Yelp, Apple Maps, and other similar upstream providers.
    technologies_used: |
      Django, Python, AWS, Java, Spring, Node.JS, React, Laravel, PHP
  - role: Software Developer
    time: February 2017-December 2019
    company: Rotary International
    company_href: https://www.rotary.org
    company_location: Evanston, Illinois
    details1: |
      •	Contributor to Rotary.org and My.Rotary.org product team with Drupal plugin development. Involved in modernization of the back-end
      CMS from Drupal 7 to Zend Framework, which helped to implement best practices with a more predictable feature release schedule.
    details2: |
      • Provided code reviews for peer pull request submissions accross all projects; ensuring best practices and a consistant style was
      enforced for deployed code.
    details3: |
      • Involved in increasing unit test coverage into legacy codebase by refactoring select areas to allow for greater modularity and
      testability.
    technologies_used: |
      PHP, Docker, Drupal, Zend Framework, Node.JS, JavaScript
  - role: Software Developer
    time: June 2013-February 2017
    company: Steadfast Networks, LLC.
    company_href: https://www.steadfast.net
    company_location: Chicago, Illinois
    details1: |
      •	Reduced overall client data redundancy by integrating a client facing web portal into serveral back-office systems using a Django-based API
      as a service.
    details2: |
      •	Added client help-desk features to allow for support tech staff to more efficiently cross-reference client details and services.
    details3: |
      •	Implemented a website order form back-end in PHP which helped to unify the billing and device managment system for incoming client orders.
    technologies_used: |
      Python, PHP, JavaScript, Backbone.JS, jQuery, Django, Docker
  - role: Software Developer
    time: July 2012-September 2013
    company: Digital Management Partners, Inc.
    company_href: https://www.gigenet.com
    company_location: Arlington Heights, Illinois
    details1: |
      •	Integrated a Django-based application to kickstart Linux installs leading to a more automated client onboarding experience in dedicated server setup.
    details2: |
      •	Integrated a virtual machine "snapshot" feature into the the Xen-based cloud portal web application which allowed virtual machine state to be preserved on-demand. 
    details3: |
      •	Wrote and maintained sofware to track the life-cycle or server hardware components and billable services, resulting in a more efficient use of resources.
    technologies_used: |
      PHP, Docker, Django, Python, JavaScript, Backbone.JS, jQuery
projects:
  - title: Chess via email
    link: https://www.chessvia.email
    details: >
      Node.JS service built with Express.js that provides a publically accessible UI in React.js.
      Ability to play chess between two players moderated through Email correspondence, using a graphical JavaScript based game board.
